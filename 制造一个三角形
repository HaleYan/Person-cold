/*#include<stdio.h>
#include<iostream>
using namespace std;
#include<algorithm>
#define N 41
int main(){
	char ch;
	int n,a,b;
	while((cin>>ch>>n)&&ch!='@'){
		char A[41][41]={0};
		A[0][n-1]=ch;
		a=b=n-1;
		for(int i = 1;i<n-1;++i){
			A[i][--a]=ch;
			A[i][++b]=ch;
	}
	for(int j=0;j<2*n-1;j++) A[n-1][j]=ch;
	for(int i=0;i<n;i++){
		for(int j=0;j<2*n-1;j++){
			if(A[i][j]==0) printf(" ");
			else printf("%c",A[i][j]);
		}
		printf("\n");	
	}
		printf("\n");
	}
	return 0;
}*/
#include <stdio.h>  
#include <string.h>  
int main()  
{  
    char a;  
    int b,i,j,k=0;  
    while((a=getchar())!='@')//可换为：while(scanf("%c",&a)&&a!='@')  
    {  
        ++k;  
        getchar();//这一句的作用是读取空格！   
        scanf("%d",&b);  
        getchar();//记住这一句不能省，否则会在第二次输入时a直接变成\n（换行符）！   
        if(k!=1)//这个格式很重要，这是在第一个结果的后面先不输出空行，  
          printf("\n");//只有在判断过第二个结果满足条件后，才输出空行，  
                    //此空行依然在第二个结果之前，满足两个空三角形之间有空行的条件！    
        for(i=1;i<b;i++)  
        {  
            for(j=1;j<=b+(i-1);j++)   
             {  
                if(j==b-(i-1)||j==b+(i-1))  
                   printf("%c",a);  
                else   
                   printf(" ");  
             }   
            printf("\n");  
        }         
        for(i=0;i<2*b-1;i++)  
          printf("%c",a);  
        printf("\n");  
    }  
    return 0;  
}  
